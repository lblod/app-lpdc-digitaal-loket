version: "3.7"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "50"

services:
  lpdc:
    image: lblod/frontend-lpdc:0.18.4
    environment:
      EMBER_ACMIDM_SCOPE: "openid rrn profile vo abb_lpdc"
      # The next variables are environment-specific
      # These should be overriden in docker-compose.override.yml
      EMBER_LOKET_URL: "<LOKET_URL>"
      EMBER_IPDC_URL: "<IPDC_URL>"
      EMBER_ACMIDM_CLIENT_ID: "<ACMIDM_CLIENT_ID>"
      EMBER_ACMIDM_AUTH_URL: "<ACMIDM_AUTH_URL>"
      EMBER_ACMIDM_LOGOUT_URL: "<ACMIDM_LOGOUT_URL>"
      EMBER_ACMIDM_AUTH_REDIRECT_URL: "<ACMIDM_AUTH_REDIRECT_URL>"
      EMBER_ACMIDM_SWITCH_REDIRECT_URL: "<ACMIDM_SWITCH_REDIRECT_URL>"
    links:
      - identifier:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  identifier:
    image: semtech/mu-identifier:1.10.0
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  dispatcher:
    image: semtech/mu-dispatcher:2.1.0-beta.2
    volumes:
      - ./config/dispatcher:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  deltanotifier:
    image: cecemel/delta-notifier:0.2.0-beta.3
    depends_on:
      migrations:
        condition: service_healthy
    volumes:
      - ./config/delta:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  database:
    image: semtech/mu-authorization:feature-service-roam-r1.1
    depends_on:
      migrations:
        condition: service_healthy
      virtuoso:
        condition: service_started
    environment:
      MU_SPARQL_ENDPOINT: "http://virtuoso:8890/sparql"
      DATABASE_OVERLOAD_RECOVERY: "true"
      # DATABASE_COMPATIBILITY: "Virtuoso"
      # Note: not sure whether it gets picked up properly; it is meant for healing-process which may make
      # heavy queries
      QUERY_MAX_PROCESSING_TIME: 605000
      QUERY_MAX_EXECUTION_TIME: 605000
    volumes:
      - ./config/authorization:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  virtuoso:
    image: redpencil/virtuoso:1.2.0-rc.1
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    volumes:
      - ./data/db:/data
      - ./config/virtuoso/virtuoso.ini:/data/virtuoso.ini # Note: Override this setting on production
      - ./config/virtuoso/:/opt/virtuoso-scripts
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  migrations:
    image: semtech/mu-migrations-service:0.8.0
    depends_on:
      virtuoso:
        condition: service_started
    environment:
      MU_SPARQL_TIMEOUT: "500"
      BATCH_SIZE: "1000"
    volumes:
      - ./config/migrations:/data/migrations
      - ./health_checks:/tmp/health_checks
    links:
      - virtuoso:database
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
    healthcheck:
      test: [ "CMD-SHELL", "chmod +x /tmp/health_checks/migrations-healthcheck.sh; /tmp/health_checks/migrations-healthcheck.sh" ]
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 200

  cache:
    image: semtech/mu-cache:2.0.2
    links:
      - resource:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  resource:
    image: semtech/mu-cl-resources:1.24.0
    depends_on:
      migrations:
        condition: service_healthy
    environment:
      CACHE_CLEAR_PATH: "http://cache/.mu/clear-keys"
    volumes:
      - ./config/resources:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  login:
    image: lblod/acmidm-login-service:0.9.2
    environment:
      LOG_SINK_URL: "http://sink"
      MU_APPLICATION_AUTH_ROLE_CLAIM: "abb_lpdc_rol_3d"
      # The next variables are environment-specific.
      # These should be overriden in docker-compose.override.yml
      MU_APPLICATION_AUTH_DISCOVERY_URL: "<ACM_IDM_AUTH_DISCOVERY_URL>"
      MU_APPLICATION_AUTH_CLIENT_ID: "<ACM_IDM_AUTH_CLIENT_ID>"
      MU_APPLICATION_AUTH_REDIRECT_URI: "<ACMIDM_AUTH_REDIRECT_URI>"
      MU_APPLICATION_AUTH_CLIENT_SECRET: "<ACMIDM_AUTH_CLIENT_SECRET>"
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  sink:
    image: nginx:1.25.1
    volumes:
      - ./config/sink/sink.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  ################################################################################
  # Report generation and dashboard specific services
  ################################################################################
  report-generation:
    image: lblod/loket-report-generation-service:0.6.3
    depends_on:
      migrations:
        condition: service_healthy
    volumes:
      - ./data/files:/share
      - ./config/reports/:/config/
    links:
      - virtuoso:database # for heavy reporting queries; we prefer going directly to virtuoso
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  dashboard:
    image: lblod/frontend-dashboard:1.6.0
    environment:
      EMBER_LOGIN_ROUTE: "mock-login"
    links:
      - identifier:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  file:
    image: cecemel/file-service:3.3.0
    depends_on:
      migrations:
        condition: service_healthy
    volumes:
      - ./data/files:/share
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  ################################################################################
  # LPDC-specific Services
  ################################################################################
  lpdc-management:
    depends_on:
      migrations:
        condition: service_healthy
    image: lblod/lpdc-management-service:0.44.2
    environment:
      LOG_SPARQL_ALL: "false"
      LOG_SPARQL_QUERIES: "false"
      LOG_SPARQL_UPDATES: "false"
      DEBUG_AUTH_HEADERS: "false"
      ADRESSEN_REGISTER_API_KEY: "<ADRESSEN_REGISTER_API_KEY>"
      IPDC_API_ENDPOINT: "<IPDC_API_ENDPOINT_URL>"
      IPDC_API_KEY: "<IPDC_API_KEY>"
      MU_SPARQL_ENDPOINT: 'http://database:8890/sparql'
      MU_APPLICATION_GRAPH: "http://mu.semte.ch/application"
      INSTANCE_SNAPSHOT_PROCESSING_CRON_PATTERN: "*/1 * * * *" # run the job every minute
      CONCEPT_SNAPSHOT_PROCESSING_CRON_PATTERN: "*/1 * * * *" # run the job every minute
    labels:
      - "logging=true"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost" ]
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 200

  lpdc-publish:
    image: lblod/lpdc-publish-service:0.19.0
    depends_on:
      migrations:
        condition: service_healthy
    environment:
      LOG_SPARQL_ALL: "false"
      LOG_SPARQL_QUERIES: "false"
      LOG_SPARQL_UPDATES: "false"
      DEBUG_AUTH_HEADERS: "false"
      CRON_PATTERN: "* 4-20 * * *" # every minute, from 4:00 -> 20:59 UTC
      # The next variables are environment-specific.
      # Best to override in docker-compose.override.yml
      IPDC_JSON_ENDPOINT: "<IPDC endpoint url>"
      IPDC_X_API_KEY: "<IPDC api key>"
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
    links:
      - virtuoso:database # We want to go directly to virtuoso database

  ldes-consumer-conceptsnapshot-ipdc:
    image: redpencil/ldes-consumer:feature-stability-improvements-r1.1
    depends_on:
      lpdc-management:
        condition: service_healthy
      migrations:
        condition: service_healthy
    environment:
      LDES_STREAM: "<endpoint ldes stream>"
      LDES_ENDPOINT_VIEW: "<endpoint first page of ldes stream>"
      LDES_ENDPOINT_HEADER_XAPIKEY: "X-API-KEY;<your endpoint api key value here>"
      LDES_LOGGING_LEVEL: "debug"
      MU_APPLICATION_GRAPH: "http://mu.semte.ch/graphs/lpdc/conceptsnapshots-ldes-data/ipdc"
      SAVE_ALL_VERSIONS_IGNORING_TIMESTAMP_DATA: "true"
      REPLACE_VERSIONS: "false" # we query snapshots. snapshots don't change ...
      CRON_PATTERN: "*/15 * * * *" # run the job every 15 minutes
    labels:
      - "logging=true"
    links:
      - virtuoso:database # We want to go directly to virtuoso database
    restart: always
    logging: *default-logging

  ldes-consumer-instancesnapshot-gent:
    image: redpencil/ldes-consumer:feature-stability-improvements-r1.1
    depends_on:
      lpdc-management:
        condition: service_healthy
      migrations:
        condition: service_healthy
    environment:
      LDES_STREAM: "<endpoint ldes stream>"
      LDES_ENDPOINT_VIEW: "<endpoint first page of ldes stream>"
      LDES_LOGGING_LEVEL: "debug"
      MU_APPLICATION_GRAPH: "http://mu.semte.ch/graphs/lpdc/instancesnapshots-ldes-data/gent"
      SAVE_ALL_VERSIONS_IGNORING_TIMESTAMP_DATA: "true"
      REPLACE_VERSIONS: "false" # we query snapshots. snapshots don't change ...
      CRON_PATTERN: "*/2 * * * *" # run the job every 2 minutes
    labels:
      - "logging=true"
    links:
      - virtuoso:database
    restart: always
    logging: *default-logging